!function e(n,t,o){function r(a,s){if(!t[a]){if(!n[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(i)return i(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=t[a]={exports:{}};n[a][0].call(u.exports,function(e){var t=n[a][1][e];return r(t?t:e)},u,u.exports,e,n,t,o)}return t[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)r(o[a]);return r}({1:[function(e,n,t){var o=function(e,n,t,o){var r=e(),i={init:function(){console.log("App started."),s.setupEventListeners(),a.init()},dispatchMessage:function(e){a.sendMessage(e,s.clearInput)},messageReceived:function(e){var n=i.formatTime(e.createdAt),t={text:e.text,from:e.from,createdAt:n};s.renderMessage(t)},dispatchLocation:function(){return navigator.geolocation?(s.renderLocationBtn("disable"),void navigator.geolocation.getCurrentPosition(function(e){s.renderLocationBtn("enable");var n={latitude:e.coords.latitude,longitude:e.coords.longitude};a.sendLocation(n)},function(){s.renderLocationBtn("enable"),alert("unable to fecth location")})):alert("Geolocation not support by your browser!")},locationReceived:function(e){var n=i.formatTime(e.createdAt),t={from:e.from,url:e.url,createdAt:n};s.renderLocation(t)},formatTime:function(e){return t(e).format("h:mm a")},updateUserList:function(e){s.renderUserList(e)}},a={sendMessage:function(e,n){r.emit("createMessage",{text:e},n)},sendLocation:function(e){r.emit("createLocationMessage",e)},connect:function(){r.emit("join",s.DOM.$params,function(e){e?(alert(e),window.location.href="/"):console.log("No error")})},disconnect:function(){console.log("Disconnecting from chat")},init:function(){r.on("connect",a.connect),r.on("disconnect",a.disconnect),r.on("newMessage",i.messageReceived),r.on("updateUserList",i.updateUserList),r.on("newLocationMessage",i.locationReceived)}},s={DOM:{$messages:n("#messages"),$messageTemplate:n("#message-template"),$messageForm:n("#message-form"),$users:n("#users"),$messageInput:n("[name=message]"),$locationBtn:n("#send-location"),$locationMessage:n("#location-message-template"),$params:n.deparam(window.location.search)},renderMessage:function(e){var n=o.render(s.DOM.$messageTemplate.html(),e);s.DOM.$messages.append(n),s.scrollToBottom()},renderUserList:function(e){var t=n("<ol></ol>");e.forEach(function(e){t.append(n("<li></li>").text(e))}),n("#users").html(t)},renderLocation:function(e){var n=o.render(s.DOM.$locationMessage.html(),e);s.DOM.$messages.append(n),s.scrollToBottom()},clearInput:function(){s.DOM.$messageInput.val("")},handleUserInput:function(e){e.preventDefault();var n=s.DOM.$messageInput.val();""!==n.trim()&&i.dispatchMessage(n)},renderLocationBtn:function(e){"disable"===e?s.DOM.$locationBtn.attr("disabled","disabled").text("Sending location..."):"enable"===e&&s.DOM.$locationBtn.removeAttr("disabled").text("Send location")},scrollToBottom:function(){var e=s.DOM.$messages,n=e.children("li:last-child"),t=e.prop("clientHeight"),o=e.prop("scrollTop"),r=e.prop("scrollHeight"),i=n.innerHeight(),a=n.prev().innerHeight();t+o+i+a>=r&&e.scrollTop(r)},setupEventListeners:function(){s.DOM.$messageForm.on("submit",s.handleUserInput),s.DOM.$locationBtn.on("click",i.dispatchLocation)}};return{init:i.init}}(io,jQuery,moment,Mustache);o.init()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvY2hhdC5qcyJdLCJuYW1lcyI6WyJlIiwidCIsIm4iLCJyIiwicyIsIm8iLCJ1IiwiYSIsInJlcXVpcmUiLCJpIiwiZiIsIkVycm9yIiwiY29kZSIsImwiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJNeUNoYXRDb250cm9sbGVyIiwiaW8iLCIkIiwibW9tZW50IiwiTXVzdGFjaGUiLCJzb2NrZXQiLCJhcHBDdHJsIiwiaW5pdCIsImNvbnNvbGUiLCJsb2ciLCJ1aUN0cmwiLCJzZXR1cEV2ZW50TGlzdGVuZXJzIiwibmV0d29ya0N0cmwiLCJkaXNwYXRjaE1lc3NhZ2UiLCJ0ZXh0Iiwic2VuZE1lc3NhZ2UiLCJjbGVhcklucHV0IiwibWVzc2FnZVJlY2VpdmVkIiwibWVzc2FnZSIsInRpbWUiLCJmb3JtYXRUaW1lIiwiY3JlYXRlZEF0IiwiZm9ybWF0dGVkTWVzc2FnZSIsImZyb20iLCJyZW5kZXJNZXNzYWdlIiwiZGlzcGF0Y2hMb2NhdGlvbiIsIm5hdmlnYXRvciIsImdlb2xvY2F0aW9uIiwicmVuZGVyTG9jYXRpb25CdG4iLCJnZXRDdXJyZW50UG9zaXRpb24iLCJwb3NpdGlvbiIsImNvb3JkcyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwic2VuZExvY2F0aW9uIiwiYWxlcnQiLCJsb2NhdGlvblJlY2VpdmVkIiwibG9jYXRpb25Nc2ciLCJmb3JtYXR0ZWRMb2NhdGlvbiIsInVybCIsInJlbmRlckxvY2F0aW9uIiwiZm9ybWF0IiwidXBkYXRlVXNlckxpc3QiLCJ1c2VycyIsInJlbmRlclVzZXJMaXN0IiwiZW1pdCIsImNvbm5lY3QiLCJET00iLCIkcGFyYW1zIiwiZXJyIiwid2luZG93IiwibG9jYXRpb24iLCJocmVmIiwiZGlzY29ubmVjdCIsIm9uIiwiJG1lc3NhZ2VzIiwiJG1lc3NhZ2VUZW1wbGF0ZSIsIiRtZXNzYWdlRm9ybSIsIiR1c2VycyIsIiRtZXNzYWdlSW5wdXQiLCIkbG9jYXRpb25CdG4iLCIkbG9jYXRpb25NZXNzYWdlIiwiZGVwYXJhbSIsInNlYXJjaCIsImh0bWwiLCJyZW5kZXIiLCJhcHBlbmQiLCJzY3JvbGxUb0JvdHRvbSIsIm9sIiwiZm9yRWFjaCIsInVzZXIiLCJodG1sTG9jYXRpb24iLCJ2YWwiLCJoYW5kbGVVc2VySW5wdXQiLCJwcmV2ZW50RGVmYXVsdCIsIm1lc3NhZ2VUZXh0IiwidHJpbSIsInN0YXR1cyIsImF0dHIiLCJyZW1vdmVBdHRyIiwibWVzc2FnZXMiLCJuZXdNZXNzYWdlIiwiY2hpbGRyZW4iLCJjbGllbnRIZWlnaHQiLCJwcm9wIiwic2Nyb2xsVG9wIiwic2Nyb2xsSGVpZ2h0IiwibmV3TWVzc2FnZUhlaWdodCIsImlubmVySGVpZ2h0IiwibGFzdE1lc3NhZ2VIZWlnaHQiLCJwcmV2IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FBQSxRQUFBQSxHQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFFBQUFDLEdBQUFDLEVBQUFDLEdBQUEsSUFBQUosRUFBQUcsR0FBQSxDQUFBLElBQUFKLEVBQUFJLEdBQUEsQ0FBQSxHQUFBRSxHQUFBLGtCQUFBQyxVQUFBQSxPQUFBLEtBQUFGLEdBQUFDLEVBQUEsTUFBQUEsR0FBQUYsR0FBQSxFQUFBLElBQUFJLEVBQUEsTUFBQUEsR0FBQUosR0FBQSxFQUFBLElBQUFLLEdBQUEsR0FBQUMsT0FBQSx1QkFBQU4sRUFBQSxJQUFBLE1BQUFLLEdBQUFFLEtBQUEsbUJBQUFGLEVBQUEsR0FBQUcsR0FBQVgsRUFBQUcsSUFBQVMsV0FBQWIsR0FBQUksR0FBQSxHQUFBVSxLQUFBRixFQUFBQyxRQUFBLFNBQUFkLEdBQUEsR0FBQUUsR0FBQUQsRUFBQUksR0FBQSxHQUFBTCxFQUFBLE9BQUFJLEdBQUFGLEVBQUFBLEVBQUFGLElBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLEdBQUEsTUFBQUQsR0FBQUcsR0FBQVMsUUFBQSxJQUFBLEdBQUFMLEdBQUEs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QUNBYixFQUNBekMsR0FBQXFDLElBQUFRLFVBQUFXLE9BQUFLLEdBQ0E3RCxFQUFBeUQsa0JBR0FuRCxXQUFBLFdBQ0FOLEVBQUFxQyxJQUFBWSxjQUFBYSxJQUFBLEtBR0FDLGdCQUFBLFNBQUE1RixHQUNBQSxFQUFBNkYsZ0JBQ0EsSUFBQUMsR0FBQWpFLEVBQUFxQyxJQUFBWSxjQUFBYSxLQUNBLE1BQUFHLEVBQUFDLFFBQ0F0RSxFQUFBTyxnQkFBQThELElBR0EvQyxrQkFBQSxTQUFBaUQsR0FDQSxZQUFBQSxFQUNBbkUsRUFBQXFDLElBQUFhLGFBQUFrQixLQUFBLFdBQUEsWUFDQWhFLEtBQUEsdUJBQ0EsV0FBQStELEdBQ0FuRSxFQUFBcUMsSUFBQWEsYUFBQW1CLFdBQUEsWUFBQWpFLEtBQUEsa0JBR0FxRCxlQUFBLFdBQ0EsR0FBQWEsR0FBQXRFLEVBQUFxQyxJQUFBUSxVQUNBMEIsRUFBQUQsRUFBQUUsU0FBQSxpQkFDQUMsRUFBQUgsRUFBQUksS0FBQSxnQkFDQUMsRUFBQUwsRUFBQUksS0FBQSxhQUNBRSxFQUFBTixFQUFBSSxLQUFBLGdCQUNBRyxFQUFBTixFQUFBTyxjQUNBQyxFQUFBUixFQUFBUyxPQUFBRixhQUVBTCxHQUFBRSxFQUNBRSxFQUFBRSxHQUFBSCxHQUNBTixFQUFBSyxVQUFBQyxJQUlBM0Usb0JBQUEsV0FDQUQsRUFBQXFDLElBQUFVLGFBQUFILEdBQUEsU0FBQTVDLEVBQUErRCxpQkFDQS9ELEVBQUFxQyxJQUFBYSxhQUFBTixHQUFBLFFBQUFoRCxFQUFBbUIsbUJBSUEsUUFDQWxCLEtBQUFELEVBQUFDLE9BRUFOLEdBQUEwRixPQUFBeEYsT0FBQUMsU0FFQUosR0FBQU8iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgTXlDaGF0Q29udHJvbGxlciA9IChmdW5jdGlvbihpbywgJCwgbW9tZW50LCBNdXN0YWNoZSkge1xuICB2YXIgc29ja2V0ID0gaW8oKTtcblxuICAvKlxuICAgIGFwcENvbnRyb2xsZXIgLSBNYWluIGNoYXQgY29udHJvbFxuICAqL1xuICB2YXIgYXBwQ3RybCA9IHtcbiAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdBcHAgc3RhcnRlZC4nKTtcbiAgICAgIHVpQ3RybC5zZXR1cEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICBuZXR3b3JrQ3RybC5pbml0KCk7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoTWVzc2FnZTogZnVuY3Rpb24odGV4dCkge1xuICAgICAgbmV0d29ya0N0cmwuc2VuZE1lc3NhZ2UodGV4dCwgdWlDdHJsLmNsZWFySW5wdXQpO1xuICAgIH0sXG5cbiAgICBtZXNzYWdlUmVjZWl2ZWQ6IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICAgIHZhciB0aW1lID0gYXBwQ3RybC5mb3JtYXRUaW1lKG1lc3NhZ2UuY3JlYXRlZEF0KTtcbiAgICAgIHZhciBmb3JtYXR0ZWRNZXNzYWdlID0ge1xuICAgICAgICB0ZXh0OiBtZXNzYWdlLnRleHQsXG4gICAgICAgIGZyb206IG1lc3NhZ2UuZnJvbSxcbiAgICAgICAgY3JlYXRlZEF0OiB0aW1lLFxuICAgICAgfTtcbiAgICAgIHVpQ3RybC5yZW5kZXJNZXNzYWdlKGZvcm1hdHRlZE1lc3NhZ2UpO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaExvY2F0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghbmF2aWdhdG9yLmdlb2xvY2F0aW9uKSB7XG4gICAgICAgIHJldHVybiBhbGVydCgnR2VvbG9jYXRpb24gbm90IHN1cHBvcnQgYnkgeW91ciBicm93c2VyIScpO1xuICAgICAgfVxuXG4gICAgICB1aUN0cmwucmVuZGVyTG9jYXRpb25CdG4oJ2Rpc2FibGUnKTtcbiAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICAgICAgdWlDdHJsLnJlbmRlckxvY2F0aW9uQnRuKCdlbmFibGUnKTtcbiAgICAgICAgdmFyIGNvb3JkcyA9IHtcbiAgICAgICAgICBsYXRpdHVkZTogcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLFxuICAgICAgICAgIGxvbmdpdHVkZTogcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSxcbiAgICAgICAgfTtcbiAgICAgICAgbmV0d29ya0N0cmwuc2VuZExvY2F0aW9uKGNvb3Jkcyk7XG4gICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgdWlDdHJsLnJlbmRlckxvY2F0aW9uQnRuKCdlbmFibGUnKTtcbiAgICAgICAgYWxlcnQoJ3VuYWJsZSB0byBmZWN0aCBsb2NhdGlvbicpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGxvY2F0aW9uUmVjZWl2ZWQ6IGZ1bmN0aW9uKGxvY2F0aW9uTXNnKSB7XG4gICAgICB2YXIgdGltZSA9IGFwcEN0cmwuZm9ybWF0VGltZShsb2NhdGlvbk1zZy5jcmVhdGVkQXQpO1xuICAgICAgdmFyIGZvcm1hdHRlZExvY2F0aW9uID0ge1xuICAgICAgICBmcm9tOiBsb2NhdGlvbk1zZy5mcm9tLFxuICAgICAgICB1cmw6IGxvY2F0aW9uTXNnLnVybCxcbiAgICAgICAgY3JlYXRlZEF0OiB0aW1lLFxuICAgICAgfTtcbiAgICAgIHVpQ3RybC5yZW5kZXJMb2NhdGlvbihmb3JtYXR0ZWRMb2NhdGlvbik7XG4gICAgfSxcblxuICAgIGZvcm1hdFRpbWU6IGZ1bmN0aW9uKHRpbWUpIHtcbiAgICAgIHJldHVybiBtb21lbnQodGltZSkuZm9ybWF0KCdoOm1tIGEnKTtcbiAgICB9LFxuXG4gICAgdXBkYXRlVXNlckxpc3Q6IGZ1bmN0aW9uKHVzZXJzKSB7XG4gICAgICB1aUN0cmwucmVuZGVyVXNlckxpc3QodXNlcnMpO1xuICAgIH0sXG4gIH07XG5cbiAgLypcbiAgICBuZXR3b3JrQ29udHJvbGxlciAtIG5ldHdvcmsgY29udHJvbFxuICAqL1xuICB2YXIgbmV0d29ya0N0cmwgPSB7XG4gICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uKG1lc3NhZ2UsIGNsZWFySW5wdXQpIHtcbiAgICAgIHNvY2tldC5lbWl0KCdjcmVhdGVNZXNzYWdlJywge1xuICAgICAgICB0ZXh0OiBtZXNzYWdlLFxuICAgICAgfSwgY2xlYXJJbnB1dCk7XG4gICAgfSxcblxuICAgIHNlbmRMb2NhdGlvbjogZnVuY3Rpb24oY29vcmRzKSB7XG4gICAgICBzb2NrZXQuZW1pdCgnY3JlYXRlTG9jYXRpb25NZXNzYWdlJywgY29vcmRzKTtcbiAgICB9LFxuXG4gICAgY29ubmVjdDogZnVuY3Rpb24oKSB7XG4gICAgICBzb2NrZXQuZW1pdCgnam9pbicsIHVpQ3RybC5ET00uJHBhcmFtcywgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBhbGVydChlcnIpO1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy8nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdObyBlcnJvcicpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgZGlzY29ubmVjdDogZnVuY3Rpb24oKSB7XG4gICAgICBjb25zb2xlLmxvZygnRGlzY29ubmVjdGluZyBmcm9tIGNoYXQnKTtcbiAgICB9LFxuXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICBzb2NrZXQub24oJ2Nvbm5lY3QnLCBuZXR3b3JrQ3RybC5jb25uZWN0KTtcbiAgICAgIHNvY2tldC5vbignZGlzY29ubmVjdCcsIG5ldHdvcmtDdHJsLmRpc2Nvbm5lY3QpO1xuICAgICAgc29ja2V0Lm9uKCduZXdNZXNzYWdlJywgYXBwQ3RybC5tZXNzYWdlUmVjZWl2ZWQpO1xuICAgICAgc29ja2V0Lm9uKCd1cGRhdGVVc2VyTGlzdCcsIGFwcEN0cmwudXBkYXRlVXNlckxpc3QpO1xuICAgICAgc29ja2V0Lm9uKCduZXdMb2NhdGlvbk1lc3NhZ2UnLCBhcHBDdHJsLmxvY2F0aW9uUmVjZWl2ZWQpO1xuICAgIH0sXG4gIH07XG5cbiAgLypcbiAgICB1aUNvbnRyb2xsZXIgLSBVc2VyIEludGVyZmFjZSBDb250cm9sbGVyXG4gICovXG4gIHZhciB1aUN0cmwgPSB7XG4gICAgRE9NOiB7XG4gICAgICAkbWVzc2FnZXM6ICQoJyNtZXNzYWdlcycpLFxuICAgICAgJG1lc3NhZ2VUZW1wbGF0ZTogJCgnI21lc3NhZ2UtdGVtcGxhdGUnKSxcbiAgICAgICRtZXNzYWdlRm9ybTogJCgnI21lc3NhZ2UtZm9ybScpLFxuICAgICAgJHVzZXJzOiAkKCcjdXNlcnMnKSxcbiAgICAgICRtZXNzYWdlSW5wdXQ6ICQoJ1tuYW1lPW1lc3NhZ2VdJyksXG4gICAgICAkbG9jYXRpb25CdG46ICQoJyNzZW5kLWxvY2F0aW9uJyksXG4gICAgICAkbG9jYXRpb25NZXNzYWdlOiAkKCcjbG9jYXRpb24tbWVzc2FnZS10ZW1wbGF0ZScpLFxuICAgICAgJHBhcmFtczogJC5kZXBhcmFtKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpLFxuICAgIH0sXG5cbiAgICByZW5kZXJNZXNzYWdlOiBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgICB2YXIgaHRtbCA9IE11c3RhY2hlLnJlbmRlcih1aUN0cmwuRE9NLiRtZXNzYWdlVGVtcGxhdGUuaHRtbCgpLCBtZXNzYWdlKTtcbiAgICAgIHVpQ3RybC5ET00uJG1lc3NhZ2VzLmFwcGVuZChodG1sKTtcbiAgICAgIHVpQ3RybC5zY3JvbGxUb0JvdHRvbSgpO1xuICAgIH0sXG5cbiAgICByZW5kZXJVc2VyTGlzdDogZnVuY3Rpb24odXNlcnMpIHtcbiAgICAgIHZhciBvbCA9ICQoJzxvbD48L29sPicpO1xuICAgICAgdXNlcnMuZm9yRWFjaChmdW5jdGlvbih1c2VyKSB7XG4gICAgICAgIG9sLmFwcGVuZCgkKCc8bGk+PC9saT4nKS50ZXh0KHVzZXIpKTtcbiAgICAgIH0pO1xuICAgICAgJCgnI3VzZXJzJykuaHRtbChvbCk7XG4gICAgfSxcblxuICAgIHJlbmRlckxvY2F0aW9uOiBmdW5jdGlvbihsb2NhdGlvbikge1xuICAgICAgdmFyIGh0bWxMb2NhdGlvbiA9IE11c3RhY2hlLnJlbmRlcihcbiAgICAgICAgdWlDdHJsLkRPTS4kbG9jYXRpb25NZXNzYWdlLmh0bWwoKSxcbiAgICAgICAgbG9jYXRpb24pO1xuICAgICAgdWlDdHJsLkRPTS4kbWVzc2FnZXMuYXBwZW5kKGh0bWxMb2NhdGlvbik7XG4gICAgICB1aUN0cmwuc2Nyb2xsVG9Cb3R0b20oKTtcbiAgICB9LFxuXG4gICAgY2xlYXJJbnB1dDogZnVuY3Rpb24oKSB7XG4gICAgICB1aUN0cmwuRE9NLiRtZXNzYWdlSW5wdXQudmFsKCcnKTtcbiAgICB9LFxuXG4gICAgaGFuZGxlVXNlcklucHV0OiBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB2YXIgbWVzc2FnZVRleHQgPSB1aUN0cmwuRE9NLiRtZXNzYWdlSW5wdXQudmFsKCk7XG4gICAgICBpZiAobWVzc2FnZVRleHQudHJpbSgpID09PSAnJykgcmV0dXJuO1xuICAgICAgYXBwQ3RybC5kaXNwYXRjaE1lc3NhZ2UobWVzc2FnZVRleHQpO1xuICAgIH0sXG5cbiAgICByZW5kZXJMb2NhdGlvbkJ0bjogZnVuY3Rpb24oc3RhdHVzKSB7XG4gICAgICBpZihzdGF0dXMgPT09ICdkaXNhYmxlJykge1xuICAgICAgICB1aUN0cmwuRE9NLiRsb2NhdGlvbkJ0bi5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpXG4gICAgICAgICAgLnRleHQoJ1NlbmRpbmcgbG9jYXRpb24uLi4nKTtcbiAgICAgIH0gZWxzZSBpZihzdGF0dXMgPT09ICdlbmFibGUnKSB7XG4gICAgICAgIHVpQ3RybC5ET00uJGxvY2F0aW9uQnRuLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJykudGV4dCgnU2VuZCBsb2NhdGlvbicpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2Nyb2xsVG9Cb3R0b206IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG1lc3NhZ2VzID0gdWlDdHJsLkRPTS4kbWVzc2FnZXM7XG4gICAgICB2YXIgbmV3TWVzc2FnZSA9IG1lc3NhZ2VzLmNoaWxkcmVuKCdsaTpsYXN0LWNoaWxkJyk7XG4gICAgICB2YXIgY2xpZW50SGVpZ2h0ID0gbWVzc2FnZXMucHJvcCgnY2xpZW50SGVpZ2h0Jyk7XG4gICAgICB2YXIgc2Nyb2xsVG9wID0gbWVzc2FnZXMucHJvcCgnc2Nyb2xsVG9wJyk7XG4gICAgICB2YXIgc2Nyb2xsSGVpZ2h0ID0gbWVzc2FnZXMucHJvcCgnc2Nyb2xsSGVpZ2h0Jyk7XG4gICAgICB2YXIgbmV3TWVzc2FnZUhlaWdodCA9IG5ld01lc3NhZ2UuaW5uZXJIZWlnaHQoKTtcbiAgICAgIHZhciBsYXN0TWVzc2FnZUhlaWdodCA9IG5ld01lc3NhZ2UucHJldigpLmlubmVySGVpZ2h0KCk7XG5cbiAgICAgIGlmKGNsaWVudEhlaWdodCArIHNjcm9sbFRvcFxuICAgICAgICArIG5ld01lc3NhZ2VIZWlnaHQgKyBsYXN0TWVzc2FnZUhlaWdodCA+PSBzY3JvbGxIZWlnaHQpIHtcbiAgICAgICAgbWVzc2FnZXMuc2Nyb2xsVG9wKHNjcm9sbEhlaWdodCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNldHVwRXZlbnRMaXN0ZW5lcnM6IGZ1bmN0aW9uKCkge1xuICAgICAgdWlDdHJsLkRPTS4kbWVzc2FnZUZvcm0ub24oJ3N1Ym1pdCcsIHVpQ3RybC5oYW5kbGVVc2VySW5wdXQpO1xuICAgICAgdWlDdHJsLkRPTS4kbG9jYXRpb25CdG4ub24oJ2NsaWNrJywgYXBwQ3RybC5kaXNwYXRjaExvY2F0aW9uKTtcbiAgICB9LFxuICB9O1xuXG4gIHJldHVybiB7XG4gICAgaW5pdDogYXBwQ3RybC5pbml0LFxuICB9O1xufSkoaW8sIGpRdWVyeSwgbW9tZW50LCBNdXN0YWNoZSk7XG5cbk15Q2hhdENvbnRyb2xsZXIuaW5pdCgpO1xuIl19
