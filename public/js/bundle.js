!function e(n,t,o){function a(i,s){if(!t[i]){if(!n[i]){var c="function"==typeof require&&require;if(!s&&c)return c(i,!0);if(r)return r(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var l=t[i]={exports:{}};n[i][0].call(l.exports,function(e){var t=n[i][1][e];return a(t?t:e)},l,l.exports,e,n,t,o)}return t[i].exports}for(var r="function"==typeof require&&require,i=0;i<o.length;i++)a(o[i]);return a}({1:[function(e,n,t){var o=function(e,n,t,o){var a=e(),r={init:function(){console.log("App started."),s.setupEventListeners(),i.init()},dispatchMessage:function(e){i.sendMessage(e,s.clearInput)},messageReceived:function(e){var n=r.formatTime(e.createdAt),t={text:e.text,from:e.from,createdAt:n};s.renderMessage(t)},dispatchLocation:function(){return navigator.geolocation?(s.renderLocationBtn("disable"),void navigator.geolocation.getCurrentPosition(function(e){s.renderLocationBtn("enable");var n={latitude:e.coords.latitude,longitude:e.coords.longitude};i.sendLocation(n)},function(){s.renderLocationBtn("enable"),alert("unable to fecth location")})):alert("Geolocation not support by your browser!")},locationReceived:function(e){var n=r.formatTime(e.createdAt),t={from:e.from,url:e.url,createdAt:n};s.renderLocation(t)},formatTime:function(e){return t(e).format("h:mm a")},updateUserList:function(e){s.renderUserList(e)}},i={sendMessage:function(e,n){a.emit("createMessage",{text:e},n)},sendLocation:function(e){a.emit("createLocationMessage",e)},connect:function(){a.emit("join",s.DOM.$params,function(e){e?(alert(e),window.location.href="/"):console.log("No error")})},disconnect:function(){console.log("Disconnecting from chat")},init:function(){a.on("connect",i.connect),a.on("disconnect",i.disconnect),a.on("newMessage",r.messageReceived),a.on("updateUserList",r.updateUserList),a.on("newLocationMessage",r.locationReceived)}},s={DOM:{$messages:n("#messages"),$messageTemplate:n("#message-template"),$messageForm:n("#message-form"),$users:n("#users"),$messageInput:n("[name=message]"),$locationBtn:n("#send-location"),$locationMessage:n("#location-message-template"),$params:n.deparam(window.location.search)},renderMessage:function(e){var n=o.render(s.DOM.$messageTemplate.html(),e);s.DOM.$messages.append(n)},renderUserList:function(e){var t=n("<ol></ol>");e.forEach(function(e){t.append(n("<li></li>").text(e))}),n("#users").html(t)},renderLocation:function(e){var n=o.render(s.DOM.$locationMessage.html(),e);s.DOM.$messages.append(n)},clearInput:function(){s.DOM.$messageInput.val("")},handleUserInput:function(e){e.preventDefault();var n=s.DOM.$messageInput.val();""!==n.trim()&&r.dispatchMessage(n)},renderLocationBtn:function(e){"disable"===e?s.DOM.$locationBtn.attr("disabled","disabled").text("Sending location..."):"enable"===e&&s.DOM.$locationBtn.removeAttr("disabled").text("Send location")},setupEventListeners:function(){s.DOM.$messageForm.on("submit",s.handleUserInput),s.DOM.$locationBtn.on("click",r.dispatchLocation)}};return{init:r.init}}(io,jQuery,moment,Mustache);o.init()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
